.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "HSH" "1P" "August 26 2021" "IEEE/The Open Group "HOLBERTON
.hy
.SH PROLOG
.PP
This manual page is part of the simple shell project.
.PD 0
.P
.PD
This shell is a small copy of sh.
.SH NAME
.PP
hsh \- simple UNIX command interpreter.
.SH SYNOPSYS
.PP
The hsh works in interactive mode as follows:
.IP
.nf
\f[C]
$\ ./hsh
($)\ /bin/ls
hsh\ main.c\ shell.c
($)
($)\ exit
$
\f[]
.fi
.PP
and also in non\-interactive mode like this:
.IP
.nf
\f[C]
$\ echo\ "/bin/ls"\ |\ ./hsh
hsh\ main.c\ shell.c\ test_ls_2
$
$\ cat\ test_ls_2
/bin/ls
/bin/ls
$
$\ cat\ test_ls_2\ |\ ./hsh
hsh\ main.c\ shell.c\ test_ls_2
hsh\ main.c\ shell.c\ test_ls_2
$
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[I]hsh\f[] utility is a basic command language interpreter that
shall execute commands read from a command line string, the standard
input, or a specified file.
.PD 0
.P
.PD
Display a prompt and wait for the user to type a command.
A command line always ends with a new line.
.PD 0
.P
.PD
The prompt is displayed again each time a command has been executed.
.PD 0
.P
.PD
The command lines are simple, no semicolons, no pipes, no redirections
or any other advanced features.
.PD 0
.P
.PD
Handle commands with arguments.
.PP
It does not:
.IP \[bu] 2
Handle special characters : ", \[aq], `, \\, *, &, #
.IP \[bu] 2
Be able to move the cursor.
.SH OPTIONS
.PP
This \f[I]hsh\f[] does not support any option of sh.
.SH ENVIRONMENT VARIABLES
.PP
The following environment variables shall affect the execution of hsh:
.TP
.B \f[I]ENV\f[]
This variable points to an array of pointers to strings called the
"enviroment".
The last pointer in this array has the value NULL.
.RS
.RE
.TP
.B \f[I]PATH\f[]
The PATH variable is an environment variable that contains an ordered
list of paths that Linux will search for executables when running a
command
.RS
.RE
.SH EXIT STATUS
.PP
The following exit values shall be returned:
.TP
.B 0
The script to be executed consisted solely of zero or more blank lines
or comments, or both.
.RS
.RE
.TP
.B 1‚Äê125
A non\-interactive shell detected an error other than command_file not
found or executable, including but not limited to syntax, redirection,
or variable assignment errors.
.RS
.RE
.TP
.B 126
A specified command_file could not be executed due to an [ENOEXEC]
error.
.RS
.RE
.TP
.B 127
A specified command_file could not be found by a non\-interactive shell.
.RS
.RE
.PP
Otherwise, the shell shall return the exit status of the last command it
invoked or attempted to invoke
.SH BUGS
.PP
This code may contain errors, if any are found please contact Sandra
Calero <3358@holbertonschool.com> or Juan Sebastian Perea
<3309@holbertonschool.com>.
.SH APPLICATION USAGE
.SS Use in interactive mode:
.PP
Run the ./hsh command like this:
.IP
.nf
\f[C]
$\ ./hsh
\f[]
.fi
.PP
The hsh prompt ($) will be printed, which waits for the input of a
command to be executed or the Ctrl + D output signal.
.PP
The command to be executed is entered, once executed, the hsh prompt is
printed again and again waits for a command to be entered or an output
signal.
.IP
.nf
\f[C]
$\ ls
hsh\ main.c\ shell.c
$
\f[]
.fi
.PP
This command will list the files and directories in the current
directory.
.PP
To exit hsh press Ctrl + D or type exit.
.IP
.nf
\f[C]
$\ exit
\f[]
.fi
.SS Use in non\-interactive mode:
.PP
You can execute scripts and commands sent to hsh through a pipeline, in
this case hsh\[aq]s own prompt is not printed so once the command is
executed hsh is terminated.
.PP
Suppose the _script file contains the following:
.IP
.nf
\f[C]
#!/bin/bash
ls
\f[]
.fi
.PP
The executable of the _script file is sent to hsh like this:
.IP
.nf
\f[C]
$\ echo\ "./_script"\ |\ ./hsh
\f[]
.fi
.PP
The result would be:
.IP
.nf
\f[C]
hsh\ main.c\ shell.c
\f[]
.fi
.PP
In non\-interactive mode commands can also be sent to hsh to be
executed.
.IP
.nf
\f[C]
$\ echo\ "pwd"\ |\ ./hsh
\f[]
.fi
.PP
The result would be:
.IP
.nf
\f[C]
/home/scalero/simple_shell
\f[]
.fi
.SH EXAMPLES
.SS Interactive mode example:
.PP
scalero\@ubuntu:~/shell$ ./hsh
.PD 0
.P
.PD
$ /bin/ls
.PD 0
.P
.PD
env\-main.c exec.c fork.c pid.c ppid.c prompt prompt.c shell_0.3 stat
test_scripting.sh wait.c
.PD 0
.P
.PD
$ ls
.PD 0
.P
.PD
env\-main.c exec.c fork.c pid.c ppid.c prompt prompt.c shell_0.3 stat
test_scripting.sh wait.c
.PD 0
.P
.PD
$ exit
.PD 0
.P
.PD
scalero\@ubuntu:~/shell$
.SS Non\-interactive mode example:
.PP
scalero\@ubuntu:~/shell$ echo "/bin/ls" | ./hsh
.PD 0
.P
.PD
env\-main.c exec.c fork.c pid.c ppid.c prompt prompt.c shell_0.3 stat
test_scripting.sh wait.c
.PD 0
.P
.PD
scalero\@ubuntu:~/shell$ echo "pwd" | ./hsh
.PD 0
.P
.PD
/home/scalero/simple_shell
.SH SEE ALSO
.PP
If any additional function is required, please refer to the manual of
\f[I]sh\f[].
.SH AUTHORS
Juan Sebastian Perea \- Sandra Calero.
